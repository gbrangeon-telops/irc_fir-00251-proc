set current_file_location_absolute_path [file normalize [file dirname [info script]]]

source $current_file_location_absolute_path/setEnvironment.tcl

proc genCore {scriptEnvironment sensorName fpgaSize} {
    #set global var here 
    set srcDir ""
    set svn_subwcrev ""
    set hwFile ""
    set elfFile ""
    set bootFile ""
    set commonDir ""
    source $scriptEnvironment
    setEnvironmentVariable $sensorName $fpgaSize
    puts "$srcDir"
    set parentDirectory_path "${srcDir}/BuildInfo/${sensorName}"
    set buildInfoFile  "${parentDirectory_path}/BuildInfo.h"
    puts $buildInfoFile
    set Vfo [open $buildInfoFile a]

    if {$fpgaSize == "160"} {
        #clear file
        chan truncate $Vfo 0
        puts $Vfo  "/**"
        puts $Vfo  " * This file declares the BuildInfo"
        puts $Vfo  " *"
        puts $Vfo  " * *************************"
        puts $Vfo  " * DO NOT EDIT THIS FILE !!!"
        puts $Vfo  " * *************************"
        puts $Vfo  " *"
        puts $Vfo  " * This file is automatically generated by the script generateBuildInfoFile.tcl"
        puts $Vfo  " * (c) Copyright 2018 Telops Inc."
        puts $Vfo  " *"
        puts $Vfo  "*/"
        puts $Vfo  "#ifndef BUILDINFO_H"
        puts $Vfo  "#define BUILDINFO_H" 
        puts $Vfo   " "
        puts $Vfo  "#ifdef ARCH_FPGA_160"
        puts $Vfo   " "
    } 
    if {$fpgaSize == "325"} {
        puts $Vfo   " "
        puts $Vfo   "#elif defined(ARCH_FPGA_325)"
        puts $Vfo   " "
    } 
    # Get hardware revision
	set rev [git_get_rev ${hwFile} 0]
    puts $Vfo "#define SVN_HARDWARE_REV ${rev}"
    close $Vfo
    
    set Vfo [open $buildInfoFile a]
    # Get software revision
	set rev [git_get_rev ${elfFile} 0]
    puts $Vfo  "#define SVN_SOFTWARE_REV      ${rev}"
    close $Vfo
  
    set Vfo [open $buildInfoFile a]
    # Get boot loader revision
	set rev [git_get_rev ${bootFile} 0]
    puts $Vfo  " #define SVN_BOOTLOADER_REV   ${rev}"
    close $Vfo
    
    set Vfo [open $buildInfoFile a]
    # Get common directory revision
	set rev [git_get_rev ${commonDir} 0]
    puts $Vfo  " #define SVN_COMMON_REV      ${rev}"
    close $Vfo
    
    set Vfo [open $buildInfoFile a]
    # Check for uncommitted changes
    puts $Vfo   " "
    puts $Vfo "#define SVN_UNCOMMITTED_CHANGES  ((SVN_HARDWARE_REV < 0) || (SVN_SOFTWARE_REV < 0) || (SVN_BOOTLOADER_REV < 0) || (SVN_COMMON_REV < 0))"
    puts $Vfo   " "
    puts $Vfo  "#if SVN_UNCOMMITTED_CHANGES"
    puts $Vfo  "#warning Uncommitted changes detected"
    puts $Vfo  "#endif"
    if {$fpgaSize == "325"} {
        puts $Vfo   " "
        puts $Vfo   "#endif  // FPGA_ARCH Check"
        puts $Vfo   " "
        puts $Vfo   "#endif // BUILDINFO_H"
    }
    close $Vfo
}


#Argument check
if { $argc != 1 } {
	puts "The generateBuildInfo.tcl script requires one sensor name."
	#exit
} else {
	puts "OK!"
    set sensorName [lindex $argv 0 ]
}
#prefere to use the path here instead of input because it is just one place
set scriptEnvironment "$current_file_location_absolute_path/setEnvironment.tcl"

genCore $scriptEnvironment $sensorName "160"

genCore $scriptEnvironment $sensorName "325"

