
D:/Telops/FIR-00251-Proc/sdk/fir_00251_proc_marsD/fir_00251_proc_marsD_boot/Release/fir_00251_proc_marsD_boot.elf:     file format elf32-microblazeel
D:/Telops/FIR-00251-Proc/sdk/fir_00251_proc_marsD/fir_00251_proc_marsD_boot/Release/fir_00251_proc_marsD_boot.elf
architecture: MicroBlaze, flags 0x00000012:
EXEC_P, HAS_SYMS
start address 0x00000000

Program Header:
    LOAD off    0x00000094 vaddr 0x00000000 paddr 0x00000000 align 2**2
         filesz 0x00000028 memsz 0x00000028 flags r-x
    LOAD off    0x000000bc vaddr 0x00000050 paddr 0x00000050 align 2**2
         filesz 0x00005a2c memsz 0x00005a30 flags rwx
    LOAD off    0x00005ae8 vaddr 0x00005a80 paddr 0x00005a80 align 2**2
         filesz 0x00000220 memsz 0x00000c90 flags rw-

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .vectors.reset 00000008  00000000  00000000  00000094  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .vectors.sw_exception 00000008  00000008  00000008  0000009c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .vectors.interrupt 00000008  00000010  00000010  000000a4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  3 .vectors.hw_exception 00000008  00000020  00000020  000000b4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  4 .text         00005070  00000050  00000050  000000bc  2**2
                  CONTENTS, ALLOC, LOAD, CODE
  5 .init         0000003c  000050c0  000050c0  0000512c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  6 .fini         00000020  000050fc  000050fc  00005168  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  7 .ctors        00000008  0000511c  0000511c  00005188  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .dtors        00000008  00005124  00005124  00005190  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .rodata       00000950  0000512c  0000512c  00005198  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 10 .sdata2       00000004  00005a7c  00005a7c  00005ae8  2**0
                  ALLOC
 11 .data         00000220  00005a80  00005a80  00005ae8  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 12 .bss          0000026c  00005ca0  00005ca0  00005d08  2**2
                  ALLOC
 13 .heap         00000404  00005f0c  00005f0c  00005d08  2**0
                  ALLOC
 14 .stack        00000400  00006310  00006310  00005d08  2**0
                  ALLOC
 15 .debug_line   00003bd6  00000000  00000000  00005d08  2**0
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_info   000045f7  00000000  00000000  000098de  2**0
                  CONTENTS, READONLY, DEBUGGING
 17 .debug_abbrev 00001851  00000000  00000000  0000ded5  2**0
                  CONTENTS, READONLY, DEBUGGING
 18 .debug_aranges 00000530  00000000  00000000  0000f728  2**3
                  CONTENTS, READONLY, DEBUGGING
 19 .debug_ranges 00000530  00000000  00000000  0000fc58  2**3
                  CONTENTS, READONLY, DEBUGGING
 20 .debug_frame  000006f4  00000000  00000000  00010188  2**2
                  CONTENTS, READONLY, DEBUGGING
 21 .debug_loc    000032be  00000000  00000000  0001087c  2**0
                  CONTENTS, READONLY, DEBUGGING
 22 .debug_str    0000113b  00000000  00000000  00013b3a  2**0
                  CONTENTS, READONLY, DEBUGGING
SYMBOL TABLE:
00000000 l    d  .vectors.reset	00000000 .vectors.reset
00000008 l    d  .vectors.sw_exception	00000000 .vectors.sw_exception
00000010 l    d  .vectors.interrupt	00000000 .vectors.interrupt
00000020 l    d  .vectors.hw_exception	00000000 .vectors.hw_exception
00000050 l    d  .text	00000000 .text
000050c0 l    d  .init	00000000 .init
000050fc l    d  .fini	00000000 .fini
0000511c l    d  .ctors	00000000 .ctors
00005124 l    d  .dtors	00000000 .dtors
0000512c l    d  .rodata	00000000 .rodata
00005a7c l    d  .sdata2	00000000 .sdata2
00005a80 l    d  .data	00000000 .data
00005ca0 l    d  .bss	00000000 .bss
00005f0c l    d  .heap	00000000 .heap
00006310 l    d  .stack	00000000 .stack
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_loc	00000000 .debug_loc
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    df *ABS*	00000000 d:/xilinx/sdk/2013.4/gnu/microblaze/nt/bin/../lib/gcc/microblaze-xilinx-elf/4.6.4/../../../../microblaze-xilinx-elf/lib/m/le/crt0.o
00000008 l       .vectors.sw_exception	00000000 _vector_sw_exception
00000010 l       .vectors.interrupt	00000000 _vector_interrupt
00000020 l       .vectors.hw_exception	00000000 _vector_hw_exception
00000000 l    df *ABS*	00000000 d:/xilinx/sdk/2013.4/gnu/microblaze/nt/bin/../lib/gcc/microblaze-xilinx-elf/4.6.4/m/le/crtbegin.o
0000511c l     O .ctors	00000000 __CTOR_LIST__
00005124 l     O .dtors	00000000 __DTOR_LIST__
00000084 l       .text	00000000 __do_global_dtors_aux
00005ca0 l     O .bss	00000001 completed.2340
00005ca4 l     O .bss	00000004 dtor_idx.2342
00000140 l       .text	00000000 frame_dummy
00005ca8 l     O .bss	00000018 object.2352
00000000 l    df *ABS*	00000000 xil_printf.o
00000254 l     F .text	00000078 padding
000002cc l     F .text	000001f4 outnum
00000000 l    df *ABS*	00000000 hw_exception_handler.o
00005a80 l       .data	00000000 mb_sp_save_r3
00000988 l       .text	00000000 ex_handler_not_sp_violation
00000984 l       .text	00000000 ex_handler_sp_violation
000009b4 l       .text	00000000 ex_handler_no_ds
000009d0 l       .text	00000000 handle_other_ex
00000a7c l       .text	00000000 ex_handler_unhandled
000009ec l       .text	00000000 handle_other_ex_tail
00000a58 l       .text	00000000 ex_handler_done
00000000 l    df *ABS*	00000000 d:/xilinx/sdk/2013.4/gnu/microblaze/nt/bin/../lib/gcc/microblaze-xilinx-elf/4.6.4/m/le/crtend.o
00005120 l     O .ctors	00000000 __CTOR_END__
00002218 l       .text	00000000 __do_global_ctors_aux
00000000 l    df *ABS*	00000000 ./src/Common/Led_ctrl.o
00005cc0 l     O .bss	00000008 tic.4418
00000000 l    df *ABS*	00000000 ./src/proc_boot.o
00005cd0 l     O .bss	00000004 state.4662
00005cd4 l     O .bss	00000050 vectorSection.4669
00005d24 l     O .bss	00000004 qspiFlashPageIndex.4663
00005d28 l     O .bss	00000100 flashData.4664
00005e2c l     O .bss	00000050 lbuffer.4665
00005e7c l     O .bss	00000004 lbuflen.4666
00005e80 l     O .bss	00000004 srecLineIndex.4667
00005e28 l     O .bss	00000004 progress.4668
00000000 l    df *ABS*	00000000 xintc.o
000037d8 l     F .text	00000058 StubHandler
00000000 l    df *ABS*	00000000 xspi.o
00004178 l     F .text	00000034 StubStatusHandler
00000000 l    df *ABS*	00000000 xspi_options.o
00005a54 l     O .rodata	00000028 OptionsTable
00000000 l    df *ABS*	00000000 xil_assert.o
00005e84 l     O .bss	00000004 Xil_AssertCallbackRoutine
00000000 l    df *ABS*	00000000 lib_a-ctype_.o
0000583c l     O .rodata	00000180 _ctype_b
00000000 l    df *ABS*	00000000 lib_a-impure.o
00005acc l     O .data	000000f0 impure_data
00000000 l    df *ABS*	00000000 
00000000 l       *UND*	00000000 EventNotificationAry
00005ca0 l       .data	00000000 __sdata_start
00005a80 l       .sdata2	00000000 __sbss2_end
00000000 l       *UND*	00000000 gcRegsData
00000400 l       *ABS*	00000000 _STACK_SIZE
00000400 l       *ABS*	00000000 _HEAP_SIZE
00000000 l       *UND*	00000000 GC_UpdateLockedFlag
00005a80 l       .sdata2	00000000 __sdata2_start
00006710 l       .stack	00000000 _end
00000000 l       *UND*	00000000 builtInTests
00000000 l       *UND*	00000000 GC_GetTimestamp
000028f8 g     F .text	000000b0 SREC_GetNextLine
00002694 g     F .text	0000023c QSPIFlash_Read
0000511c g       .ctors	00000000 ___CTORS_LIST___
00002edc g     F .text	000000b4 elapsed_time_us
00002368 g     F .text	00000094 Led_ToggleDebugLedState
00004f48 g     F .text	00000114 XSpi_SetOptions
00005bc4 g     O .data	00000008 MB_InterruptVectorTable
00005088 g     F .text	00000038 Xil_Assert
00002264 g     F .text	00000070 Checksum8Hex
00002f90 g     F .text	0000005c Hex2Val
0000376c g     F .text	00000008 Xil_ExceptionInit
00005ca0 g       .data	00000000 __sbss_start
000040fc g     F .text	0000007c XUartNs550_SetBaud
00000a80 g       .text	00000000 microblaze_enable_exceptions
00005e88 g     O .bss	00000080 XIntc_BitPosMask
00002e04 g     F .text	000000d8 usleep
000022d4 g     F .text	00000094 Led_Init
00005bcc g     O .data	00000090 XIntc_ConfigTable
000019a4 g     F .text	000002f4 memcpy
00005128 g     O .dtors	00000000 .hidden __DTOR_END__
00004dac g     F .text	0000019c XSpi_CfgInitialize
00005a7c g       .rodata	00000000 __rodata_end
00003d0c g     F .text	00000100 XIntc_DeviceInterruptHandler
00001800 g     F .text	000000a8 __udivsi3
000039d4 g     F .text	000000f0 XIntc_Start
000030f0 g     F .text	000003fc ProcBoot_SM
00005cc8 g     O .bss	00000004 timerClockFreq
000001a4 g     F .text	00000000 _crtinit
00006310 g       .heap	00000000 _heap_end
000059bc g     O .rodata	00000004 _global_impure_ptr
00005f0c g       .bss	00000000 __bss_end
00000c28 g     F .text	00000bd8 __udivdi3
00005ca0 g       .data	00000000 __tbss_start
00004038 g     F .text	000000a8 XGpio_Initialize
00005c5c g     O .data	00000002 XTmrCtr_Offsets
00004ce8 g     F .text	000000c4 XSpi_Reset
00004750 g     F .text	00000104 XSpi_SetSlaveSelect
000037a0 g     F .text	00000038 Xil_ExceptionRegisterHandler
000050c0 g       .init	00000000 __init
00005c60 g     O .data	00000004 Xil_AssertWait
00005f10 g       .heap	00000000 _heap_start
00005ca0 g       .data	00000000 __sbss_end
00003e0c g     F .text	00000074 XGpio_CfgInitialize
00004298 g     F .text	000004b8 XSpi_Transfer
0000505c g     F .text	00000024 XSpi_LookupConfig
00005080 g     F .text	00000008 XNullHandler
000004c0 g     F .text	00000498 xil_printf
000018a8 g     F .text	000000bc __umodsi3
00000000  w      *UND*	00000000 __sf_fake_stderr
000040e0 g     F .text	0000001c XUartNs550_SendByte
00000000  w      *UND*	00000000 __deregister_frame_info
0000511c g       .ctors	00000000 __CTOR_LIST__
000041ac g     F .text	000000ec XSpi_Start
00005a80 g       .sdata2	00000000 __sbss2_start
00002d14 g     F .text	00000090 Timer_Init
0000494c g     F .text	0000039c XSpi_InterruptHandler
00001f04 g     F .text	00000314 __call_exitprocs
00000000 g     F .vectors.reset	00000000 _start
0000512c g       .rodata	00000000 __rodata_start
00005ca0 g       *ABS*	00000000 _SDA_BASE_
00005ccc g     O .bss	00000004 timerBaseAddress
00005ca0 g       .data	00000000 __data_end
00000958  w    F .text	00000000 _exception_handler
00003e80 g     F .text	000000dc XGpio_SetDataDirection
0000490c g     F .text	00000040 XSpi_Abort
00005bbc g     O .data	00000008 gProgress
00003740 g     F .text	0000002c outbyte
00004854 g     F .text	000000b8 XSpi_SetStatusHandler
00000000  w      *UND*	00000000 __sf_fake_stdin
000028d0 g     F .text	00000028 SREC_ComputeChecksum
00005ca0 g       .bss	00000000 __bss_start
00005ca0 g       .data	00000000 __tdata_start
00005ca0 g       .data	00000000 __tdata_end
00001c98 g     F .text	000001e8 memset
000034ec g     F .text	000001b0 main
00000050 g     F .text	00000000 _start1
00006310 g       .stack	00000000 _stack_end
00005f08 g     O .bss	00000004 Xil_AssertStatus
00005ca0 g       .data	00000000 __sdata_end
00005124 g       .ctors	00000000 __CTOR_END__
00005124 g       .dtors	00000000 ___DTORS_LIST___
00003f5c g     F .text	000000dc XGpio_DiscreteWrite
00005124 g       .dtors	00000000 __DTOR_LIST__
000023fc g     F .text	000000ac QSPIFlash_Handler
00002df4 g     F .text	00000010 Timer_GetCountsPerSecond
00005638 g     O .rodata	00000100 __clz_tab
00003cb0 g     F .text	0000005c XIntc_InterruptHandler
000050fc g       .fini	00000000 __fini
00005ac8 g     O .data	00000004 _impure_ptr
00005a80 g       .sdata2	00000000 __sdata2_end
0000369c g       .text	00000000 _interrupt_handler
00003ac4 g     F .text	00000110 XIntc_Connect
00003bd4 g     F .text	000000dc XIntc_Enable
000024a8 g     F .text	00000120 QSPIFlash_Init
00005124 g       .ctors	00000000 ___CTORS_END___
00006710 g       .stack	00000000 __stack
00002cec g     F .text	00000028 Stack_ConfigStackViolationException
000025c8 g     F .text	000000cc QSPIFlash_StatusReq
00003774 g     F .text	0000002c Xil_ExceptionEnable
00005c84 g     O .data	0000001c XSpi_ConfigTable
00005f10 g       .heap	00000000 _heap
00001964 g     F .text	00000040 exit
0000096c g     F .text	00000000 _hw_exception_handler
00000a94 g       .text	00000000 microblaze_enable_interrupts
00005ac4 g     O .data	00000004 __ctype_ptr__
00003830 g     F .text	000001a4 XIntc_Initialize
00005ca0 g       .data	00000000 __tbss_end
00000000  w      *UND*	00000000 __sf_fake_stdout
00005738 g     O .rodata	00000101 _ctype_
00005a84 g       .data	00000000 MB_ExceptionVectorTable
00000964 g       .text	00000000 _program_init
000029a8 g     F .text	00000344 SREC_ParseLine
00000080 g     F .text	00000000 _exit
00000ab4 g     F .text	00000174 __muldi3
00001e80 g     F .text	00000084 strlen
00002da4 g     F .text	00000050 Timer_GetTime
00006710 g       .stack	00000000 _stack
00005a80 g       .data	00000000 __data_start
00000000  w      *UND*	00000000 _Jv_RegisterClasses
00002fec g     F .text	00000058 Hex2Byte
0000095c g       .text	00000000 _program_clean
00003044 g     F .text	000000ac Hex2Bytes
00005a80 g       *ABS*	00000000 _SDA2_BASE_
00000000  w      *UND*	00000000 __register_frame_info
00000000  w      *UND*	00000000 free
00005c64 g     O .data	00000020 XGpio_ConfigTable
0000369c g     F .text	000000a4 __interrupt_handler


